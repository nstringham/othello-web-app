:root {
  --gutter-width: 1.8vmin;

  /* fallback for first page load */
  --board-background: #008000;
  --board-cell: #006800;
  --player: #000000;
  --ai: #ffffff;

  --surface: #121212;
  --on-surface: #ffffff;
  --on-surface-20: #ffffff20;
  --on-surface-30: #ffffff30;
  --soft-button-surface: #333333;
  --accent-on-surface: var(--accent-light);
  --accent-on-surface-20: var(--accent-light-20);
  --accent-on-surface-30: var(--accent-light-30);

  font-family: "Open Sans";
  font-size: 14px;
}

:root.light-theme {
  --surface: #ffffff;
  --on-surface: #000000;
  --on-surface-20: #00000020;
  --on-surface-30: #00000030;
  --soft-button-surface: #cccccc;
  --accent-on-surface: var(--accent-dark);
  --accent-on-surface-20: var(--accent-dark-20);
  --accent-on-surface-30: var(--accent-dark-30);
}

* {
  box-sizing: border-box;
}

html {
  background-color: var(--surface);
  color: var(--on-surface);
}

input {
  accent-color: var(--accent-on-surface);
}

input[type="checkbox"] {
  width: 16px;
  height: 16px;
}

button {
  --button-text: var(--accent-on-surface);
  --button-hover: var(--accent-on-surface-20);
  --button-focus: var(--accent-on-surface-30);
  appearance: none;
  border: none;
  background: transparent;
  font: inherit;
  color: var(--button-text);
  height: 40px;
  padding-inline: 12px;
  border-radius: 100vmax;
}

button:hover {
  background-color: var(--button-hover);
}

button:focus-visible,
button:active {
  background-color: var(--button-focus);
  outline: none;
}

body {
  width: 100vw;
  height: 100vh;
  width: 100dvw;
  height: 100dvh;
  margin: 0;
  display: grid;
  grid-template-rows: 1fr 30px;
}

h1 {
  font-size: 17px;
  font-weight: 400;
  text-align: center;
}

#lcp {
  position: absolute;
  color: transparent;
  pointer-events: none;
}

#board {
  place-self: center;
  --size: calc(100dvmin - 4 * var(--gutter-width));
  width: var(--size);
  height: var(--size);
  contain: strict;
  background-color: var(--board-background);
  padding: var(--gutter-width);
  gap: var(--gutter-width);
  display: grid;
  grid-template: repeat(8, 1fr) / repeat(8, 1fr);
  place-content: stretch;
  border-radius: var(--gutter-width);
}

@supports not (height: 100dvmin) {
  #board {
    --size: calc(100vmin - 4 * var(--gutter-width));
  }
}

button.cell {
  height: unset;
  padding: 0;
  background-color: var(--board-cell);
  border-radius: calc(var(--gutter-width) / 2);
  display: grid;
  place-content: center;
  grid-template-columns: 85%;
}

@keyframes grow {
  from {
    transform: scale(0);
  }

  to {
    transform: scale(1);
  }
}

.cell::before {
  padding-bottom: 100%;
  border-radius: 100vmax;
  transition: box-shadow 0.5s ease-in-out 0s, transform 0.5s ease-in-out 0s, background-color 0s step-start 0.25s;
}

.cell.black::before,
.cell.white::before {
  content: "";
  animation: grow 0.5s ease-in-out;
}

.cell.white::before {
  background-color: var(--ai);
  transform: scaleY(1);
}

.cell.black::before {
  background-color: var(--player);
  transform: scaleY(-1);
}

.hints-enabled.player-turn .cell[tabindex="0"]::before {
  content: "";
  box-shadow: inset 0 0 8px 1px var(--hint);
}

.player-turn .cell:focus-visible::before {
  content: "";
  outline: 2px solid transparent;
  outline-offset: -1px;
}

.player-turn .cell:not(.black):not(.white):focus-visible::before {
  outline-color: white;
}

.player-turn .arrow-navigation .cell.white:focus-visible::before {
  outline-color: var(--player);
}

.player-turn .arrow-navigation .cell.black:focus-visible::before {
  outline-color: var(--ai);
}

#soft-keys {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  align-items: center;
  background-color: var(--soft-button-surface);
  padding: 4px;
}

#soft-left,
#soft-right {
  text-transform: capitalize;
  font-weight: 600;
}

#soft-left {
  text-align: left;
}

#soft-right {
  text-align: right;
}

#soft-enter {
  text-transform: uppercase;
  font-size: 17px;
  font-weight: 700;
  text-align: center;
}

#settings-dialog .body > * {
  margin-inline: -8px;
  padding: 8px 16px;
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-areas:
    "label value"
    "control control";
}

#settings-dialog .body > * input[type="range"],
#settings-dialog .body > * theme-selector {
  grid-area: control;
}

#settings-dialog #difficulty {
  gap: 4px 0;
}

#settings-dialog #color-theme {
  gap: 16px 0;
}

#settings-dialog .label {
  font-size: 17px;
  font-weight: 400;
}

#settings-dialog output {
  font-size: 14px;
  font-weight: 400;
}

#close-settings {
  position: absolute;
  top: 0;
  right: 0;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

dialog {
  top: 0 !important;
  width: 100vw;
  height: calc(100vh - 30px);
  overflow-y: auto;
  border: none;
  padding: 8px;
  background-color: var(--surface);
  color: var(--on-surface);
  animation: fade-in 0.2s ease-in-out;
  overscroll-behavior: contain;
}

dialog.closing {
  animation: fade-out 0.2s ease-in-out forwards;
}

dialog .title {
  margin: 0;
  margin-bottom: 16px;
}

dialog .body {
  margin: 0;
}

dialog h1 {
  margin: 0;
  margin-bottom: 8px;
}

#game-over-dialog table {
  width: 100%;
  line-height: 24px;
}

#game-over-dialog th {
  text-align: start;
  font-size: 17px;
  font-weight: 600;
}

#game-over-dialog td {
  text-align: end;
  font-size: 17px;
  font-weight: 400;
}

#toast-container {
  position: fixed;
  bottom: max(0px, calc(env(safe-area-inset-bottom) - 12px));
  left: max(0px, calc(env(safe-area-inset-left) - 12px));
  display: grid;
  padding: 12px;
  gap: 12px;
  justify-items: start;
}

.toast {
  border-radius: 28px;
  padding: 0 24px;
  height: 48px;
  border: solid 1px var(--on-surface-30);
  background-color: var(--surface);
  color: var(--on-surface);
}

.toast > .text {
  line-height: 48px;
}
